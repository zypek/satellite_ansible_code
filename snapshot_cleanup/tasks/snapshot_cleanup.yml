---
- name: Gather all snapshots for this volume
  amazon.aws.ec2_snapshot_info:
    region: "{{ region }}"
    access_key: "{{ assumed_role.sts_creds.access_key }}"
    secret_key: "{{ assumed_role.sts_creds.secret_key }}"
    session_token: "{{ assumed_role.sts_creds.session_token }}"
    filters:
      volume-id: "{{ current_volume_id }}"
  register: snap_info
  delegate_to: localhost

- name: Calculate one week ago in ISO format
  ansible.builtin.set_fact:
    one_week_ago: "{{ '%Y%m%dT%H%M%S.%fZ' | strftime(ansible_date_time.epoch | int - 604800) }}"


- name: Debug one_week_ago
  ansible.builtin.debug:
    var: one_week_ago

- name: Filter snapshots older than 1 week
  ansible.builtin.set_fact:
    old_snapshots: >-
      {{
        snap_info.snapshots
        | selectattr('start_time', 'string')
        | selectattr('start_time', '<=', one_week_ago)
        | list
      }}

- name: Check
  ansible.builtin.debug:
    var: old_snapshots

- name: Determine the latest snapshot overall
  ansible.builtin.set_fact:
    latest_snapshot: >-
      {{
        snap_info.snapshots
        | sort(attribute='start_time', reverse=False)
        | last
      }}

- name: Determine newest snapshot among old snapshots
  ansible.builtin.set_fact:
    newest_old_snapshot: >-
      {{
        old_snapshots
        | sort(attribute='start_time', reverse=False)
        | last
        if (old_snapshots | length) > 0
        else None
      }}

- name: Build the list of snapshots to remove
  ansible.builtin.set_fact:
    remove_list: >-
      {{
        snap_info.snapshots
        | difference([latest_snapshot, newest_old_snapshot])
        | map(attribute='snapshot_id')
        | list
      }}

- name: Debug info
  ansible.builtin.debug:
    msg:
      - "Volume: {{ current_volume_id }}"
      - "All snapshots: {{ snap_info.snapshots | map(attribute='snapshot_id') | list }}"
      - "Latest overall snapshot: {{ latest_snapshot.snapshot_id if latest_snapshot else 'None' }}"
      - "Newest old snapshot: {{ newest_old_snapshot.snapshot_id if newest_old_snapshot else 'None' }}"
      - "Removing: {{ remove_list }}"

- name: Delete old snapshots
  amazon.aws.ec2_snapshot:
    region: "{{ region }}"
    snapshot_id: "{{ item }}"
    state: absent
    access_key: "{{ assumed_role.sts_creds.access_key }}"
    secret_key: "{{ assumed_role.sts_creds.secret_key }}"
    session_token: "{{ assumed_role.sts_creds.session_token }}"
  loop: "{{ remove_list }}"
  when: remove_list | length > 0
  delegate_to: localhost
