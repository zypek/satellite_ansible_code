---
- name: Assume Role
  amazon.aws.sts_assume_role:
    role_arn: "arn:aws:iam::{{ aws_account_no }}:role/{{ aws_role }}"
    role_session_name: "assumeRoleSession"
    region: "{{ aws_region }}"
  register: assumed_role
  delegate_to: localhost

- name: Retrieve Instance ID from Metadata
  ansible.builtin.uri:
    url: http://169.254.169.254/latest/meta-data/instance-id
    return_content: true
  register: instance_metadata

- name: Set Instance ID as Fact
  ansible.builtin.set_fact:
    instance_id: "{{ instance_metadata.content }}"

- name: Get current instance tags
  amazon.aws.ec2_instance_info:
    instance_ids: "{{ instance_id }}"
    region: "{{ aws_region }}"
    access_key: "{{ assumed_role.sts_creds.access_key }}"
    secret_key: "{{ assumed_role.sts_creds.secret_key }}"
    session_token: "{{ assumed_role.sts_creds.session_token }}"
  register: instance_info
  delegate_to: localhost

- name: Extract Server_update_* tags as a sorted list (latest first)
  ansible.builtin.set_fact:
    server_update_tags: >-
      {{
         instance_info.instances[0].tags
         | dict2items
         | selectattr('key', 'match', '^' ~ tag_key_value ~ '_')
         | sort(attribute='key', reverse=true)
         | list
      }}

- name: show
  debug: 
    var: server_update_tags

- name: Determine keys to keep (the two latest tags)
  ansible.builtin.set_fact:
    keep_keys: "{{ (server_update_tags | map(attribute='key') | list)[0:2] }}"

- name: Build a dictionary of old tags to remove (all except the two we keep)
  ansible.builtin.set_fact:
    cleanup_tags: "{{ cleanup_tags | default({}) | combine({ item.key: item.value }) }}"
  loop: "{{ server_update_tags | rejectattr('key', 'in', keep_keys) | list }}"

- name: Remove old Server_update_* tags (leaving the two latest)
  amazon.aws.ec2_tag:
    resource: "{{ instance_id }}"
    region: "{{ aws_region }}"
    state: absent
    tags: "{{ cleanup_tags }}"
    access_key: "{{ assumed_role.sts_creds.access_key }}"
    secret_key: "{{ assumed_role.sts_creds.secret_key }}"
    session_token: "{{ assumed_role.sts_creds.session_token }}"
  delegate_to: localhost
  when: (cleanup_tags | default([])) | length > 0
