---
- name: Include role variables
  ansible.builtin.include_vars: "vars/all.yml"

- name: "Verify if the host has been already registered to the Satellite"
  theforeman.foreman.host_info:
    username: "{{ satellite_deployment_admin_username }}"
    password: "{{ satellite_deployment_admin_password }}"
    server_url: "{{ satellite_deployment_server }}"
    organization: "{{ satellite_deployment_organization }}"
    name: "{{ inventory_hostname }}"
    validate_certs: false
  register: sat_host_reg
  delegate_to: localhost

- name: Find files in the directory
  ansible.builtin.find:
    paths: "{{ yum_repo_dir }}"
    file_type: file
  register: found_files
  when: sat_host_reg.host is none

- name: Debug the files found (optional)
  ansible.builtin.debug:
    var: found_files.files
  when: sat_host_reg.host is none

- name: Remove files if any are found
  ansible.builtin.file:
    path: "{{ item.path }}"
    state: absent
  loop: "{{ found_files.files }}"
  when: sat_host_reg.host is none

- name: Ensure that subscription_manager is used to manage subscriptions
  ansible.builtin.command: "subscription-manager config --rhsm.manage_repos=1"
  when: sat_host_reg.host is none

- name: Install Katello CA from Capsule with SSL verify off
  ansible.builtin.dnf:
    name: "{{ satellite_deployment_server }}/pub/{{ satellite_kat_cert }}"
    state: present
    sslverify: false
    validate_certs: false
    rhsm_baseurl: "{{ satellite_base_url | default(omit)}}"
    disable_gpg_check: true
  register: katello_ca_install

- name: Debug - Katello CA install result
  ansible.builtin.debug:
    var: katello_ca_install

- name: Register system to Satellite using activation key
  community.general.redhat_subscription:
    state: present
    org_id: "{{ satellite_deployment_organization }}"
    activationkey: "{{ sat_activation_key }}"
    force_register: true
  register: subman_reg

- name: Debug - registration result
  ansible.builtin.debug:
    var: subman_reg

- name: "Show a host"
  theforeman.foreman.host_info:
    username: "{{ satellite_deployment_admin_username }}"
    password: "{{ satellite_deployment_admin_password }}"
    server_url: "{{ satellite_deployment_server }}"
    organization: "{{ satellite_deployment_organization }}"
    name: "{{ inventory_hostname }}"
    validate_certs: false
  register: sat_host_reg

- name: Check if sat_host_reg.host is set
  ansible.builtin.assert:
    that:
      - sat_host_reg.host is not none
    fail_msg: "Host is null; the registration did not succeed."
    success_msg: "Host is set; registration succeeded."

- name: Debug - registration result
  ansible.builtin.debug:
    var: sat_host_reg
