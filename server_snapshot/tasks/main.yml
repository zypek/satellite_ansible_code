---
- name: AWS Instance Snapshot
  block:
    - name: Import role
      ansible.builtin.include_role:
        name: aws_role_assume

    - name: Verify assumed_role is defined and contains required keys
      ansible.builtin.assert:
        that:
          - assumed_role is defined
          - assumed_role.sts_creds is defined
          - assumed_role.sts_creds.access_key is defined
          - assumed_role.sts_creds.secret_key is defined
          - assumed_role.sts_creds.session_token is defined
        fail_msg: >
          The `assumed_role` variable is not defined or does not contain the required keys.
          Ensure the `aws_role_assume` role is executed successfully.

    - name: Import role
      ansible.builtin.include_role:
        name: aws_instance_info

    - name: Verify assumed_role is defined and contains required keys
      ansible.builtin.assert:
        that:
          - metadata_values is defined
        fail_msg: >
          The `metadata_values` variable is not defined or does not contain the required keys.
          Ensure the `aws_instance_info` role is executed successfully.

    - name: Set Instance ID as Fact
      ansible.builtin.set_fact:
        instance_id: "{{ metadata_values['instance-id'] }}"

    - name: Retrieve Attached Volume ID(s)
      amazon.aws.ec2_instance_info:
        instance_ids: "{{ instance_id }}"
        region: "{{ aws_region | default('ap-southeast-2') }}"
        access_key: "{{ assumed_role.sts_creds.access_key }}"
        secret_key: "{{ assumed_role.sts_creds.secret_key }}"
        session_token: "{{ assumed_role.sts_creds.session_token }}"
      register: instance_info
      delegate_to: localhost
    
    - name: Create Snapshot of the Attached Volumes
      amazon.aws.ec2_snapshot:
        volume_id: "{{ item }}"
        description: "Snapshot for volume {{ item }} of instance {{ instance_id }}"
        region: "{{ aws_region }}"
        access_key: "{{ assumed_role.sts_creds.access_key }}"
        secret_key: "{{ assumed_role.sts_creds.secret_key }}"
        session_token: "{{ assumed_role.sts_creds.session_token }}"
      loop: "{{ instance_info.instances[0].block_device_mappings | map(attribute='ebs.volume_id') | list }}"
      delegate_to: localhost
      register: snapshot_results
    
  rescue:
    - name: Handle errors in the block
      ansible.builtin.fail:
        msg: "An error occurred during AWS role assumption or tag management. Details: {{ ansible_failed_result.msg }}"

  always:
    - name: Verify Snapshot Creation
      ansible.builtin.debug:
        msg: "Snapshot created successfully: {{ snapshot_results.results | map(attribute='snapshot_id') | list }}"
