---
- name: Gather facts (including hostname)
  ansible.builtin.setup:

- name: Retrieve hostname from ansible_facts
  ansible.builtin.set_fact:
    current_hostname: "{{ ansible_facts['hostname'] }}"

- name: Run crm_node -l to get cluster node list
  ansible.builtin.command: crm_node -l
  register: crm_node_output

- name: Parse crm_node -l output into a list
  ansible.builtin.set_fact:
    cluster_nodes: "{{ crm_node_output.stdout_lines | map('regex_replace', '^\\d+\\s+(\\S+)\\s+.*', '\\1') | list }}"

- name: Debug cluster nodes
  ansible.builtin.debug:
    var: cluster_nodes

- name: Check if current hostname is in the cluster node list
  ansible.builtin.set_fact:
    is_cluster_member: "{{ current_hostname in cluster_nodes }}"

- name: Fail if current host is not a cluster member
  ansible.builtin.fail:
    msg: "Host {{ current_hostname }} is not a member of the cluster."
  when: not is_cluster_member

- name: Set cluster node name variable
  ansible.builtin.set_fact:
    cluster_node_name: "{{ cluster_nodes | select('search', current_hostname) | first }}"

- name: Check cluster nodes' standby status
  ansible.builtin.command: pcs status nodes
  register: pcs_status_output
  changed_when: false

- name: Extract the Standby line
  ansible.builtin.set_fact:
    standby_nodes: "{{ pcs_status_output.stdout_lines | select('search', 'Standby:') | first }}"
  run_once: true

- name: Verify if current node is in standby mode
  ansible.builtin.set_fact:
    is_in_standby: "{{ cluster_node_name in standby_nodes }}"

- name: Proceed if the current node is in standby mode
  ansible.builtin.fail:
    msg: "{{ cluster_node_name }} is not in standby mode!"
  when: not is_in_standby

- name: Run pcs node standby
  ansible.builtin.command: "pcs node unstandby {{ cluster_node_name }}"
  register: cluster_node_unstandby

- name: Pause for a while
  ansible.builtin.pause:
    seconds: 10

- name: Check cluster nodes' standby status
  ansible.builtin.command: pcs status nodes
  register: pcs_status_output
  changed_when: false

- name: Extract the Standby line
  ansible.builtin.set_fact:
    standby_nodes: "{{ pcs_status_output.stdout_lines | select('search', 'Standby:') | first }}"
  run_once: true

- name: Verify if current node is in standby mode
  ansible.builtin.set_fact:
    is_in_standby: "{{ cluster_node_name in standby_nodes }}"

- name: Assert that the current node is not in standby mod
  ansible.builtin.assert:
    that: 
      - not is_in_standby
    fail_msg: "{{ cluster_node_name }} has not been successfully set to Online. Exiting"
    success_msg: "{{ cluster_node_name }} has been successfully set to Online"
